StarterActivity
package com.konggit.apptwit;

import android.app.Application;
import android.util.Log;

import com.parse.Parse;
import com.parse.ParseACL;
import com.parse.ParseException;
import com.parse.ParseObject;
import com.parse.ParseUser;
import com.parse.SaveCallback;

public class StarterApplication extends Application {

    @Override
    public void onCreate() {
        super.onCreate();

        // Enable Local Datastore.
        Parse.enableLocalDatastore(this);

        // Add your initialization code here
        Parse.initialize(new Parse.Configuration.Builder(getApplicationContext())
                .applicationId("06af43f016dfdf80c1f425bac7587ed4d06dd5d1")
                .clientKey("7e5ca46bcc750b5df0c6c2f79ae1f25f3a610771")
                .server("http://ec2-34-212-136-147.us-west-2.compute.amazonaws.com:80/parse/")
                .build()
        );

        ParseObject object = new ParseObject("ExampleObject");
        object.put("myNumber", "123");
        object.put("myString", "rob");

        object.saveInBackground(new SaveCallback() {
            @Override
            public void done(ParseException ex) {
                if (ex == null) {
                    Log.i("Parse Result", "Successful!");
                } else {
                    Log.i("Parse Result", "Failed" + ex.toString());
                }
            }
        });


        //ParseUser.enableAutomaticUser();

        ParseACL defaultACL = new ParseACL();
        defaultACL.setPublicReadAccess(true);
        defaultACL.setPublicWriteAccess(true);
        ParseACL.setDefaultACL(defaultACL, true);

    }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

AndroidManipfest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="com.konggit.apptwit">

    <uses-permission android:name="android.permission.INTERNET"/>

    <application
        android:name=".StarterApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <activity android:name=".ContactsList">
        </activity>
    </application>

</manifest>

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

MainActivity
package com.konggit.apptwit;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import com.parse.FindCallback;
import com.parse.LogInCallback;
import com.parse.ParseException;
import com.parse.ParseQuery;
import com.parse.ParseUser;
import com.parse.SignUpCallback;

import java.util.List;

//http://ec2-34-212-136-147.us-west-2.compute.amazonaws.com:80/apps
public class MainActivity extends AppCompatActivity {

    private EditText username;
    private EditText password;

    private Button loginButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        username = (EditText) findViewById(R.id.editTextLogin);
        password = (EditText) findViewById(R.id.editTextPassword);
        loginButton = (Button) findViewById(R.id.buttonLogin);

        loginButton.setOnClickListener(new ButtonLoginListener());

        loggedCheck();
    }

    private class ButtonLoginListener implements View.OnClickListener {

        @Override
        public void onClick(View v) {

            signupOrLogin(String.valueOf(username.getText()), String.valueOf(password.getText()));

        }
    }

    private void loggedCheck() {

        if (ParseUser.getCurrentUser() != null) {

            contactList();
            Log.i("LogChecked", ParseUser.getCurrentUser().getUsername());

        }

    }

    private void login(final String username, final String password) {

        ParseUser.logInInBackground(username, password, new LogInCallback() {
            public void done(ParseUser user, ParseException e) {

                if (user != null) {

                    contactList();
                    Log.i("Login", "Successful login user: " + username + " : " + password);

                } else {

                    Log.i("Login", "Error! login user: " + username + " : " + password);
                    Log.i("Login", String.valueOf(e));

                }
            }
        });

    }




    private void signupOrLogin(final String username, final String password) {

        ParseUser user = new ParseUser();
        user.setUsername(username);
        user.setPassword(password);


        user.signUpInBackground(new SignUpCallback() {
            @Override
            public void done(ParseException e) {

                if (e == null) {

                    contactList();
                    Log.i("Signup", "Success! New user: " + username + " : " + password);

                } else {

                    if (e.getCode() == ParseException.USERNAME_TAKEN) {

                        login(username, password);

                    } else {

                        Log.i("Signup", "Error, user not created");
                        Log.i("Signup", username);
                        Log.i("Signup", password);
                        Log.i("Signup", String.valueOf(e));

                    }
                }

            }
        });

    }

    private void contactList() {

        Intent intent = new Intent(getApplicationContext(), ContactsList.class);
        startActivity(intent);

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {

        MenuInflater menuInflater = getMenuInflater();
        menuInflater.inflate(R.menu.main_menu, menu);

        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {

        if (item.getItemId() == R.id.help) {

            Log.i("Menu", "Help selected");

        }

        return super.onOptionsItemSelected(item);
    }

    //    private void userExists(final String username, final String password) {
//
//        ParseQuery<ParseUser> usersQuery = ParseUser.getQuery();
//        usersQuery.whereExists(username);
//        usersQuery.findInBackground(new FindCallback<ParseUser>() {
//            @Override
//            public void done(List<ParseUser> objects, ParseException e) {
//
//                if (e == null) {
//                    if (objects != null) {
//
//                        Log.i("CheckUser", "Exists");
//                        login(username, password);
//
//                    } else {
//
//                        Log.i("CheckUser", "Doesn't exist");
//                        signUp(username, password);
//
//                    }
//                }
//
//            }
//        });
//    }

//    private void signUp(final String username, final String password) {
//
//        ParseUser user = new ParseUser();
//        user.setUsername(username);
//        user.setPassword(password);
//
//        //just adding some field with some value if needed
//        user.put("phone", " 62-62-62");
//
//        user.signUpInBackground(new SignUpCallback() {
//            @Override
//            public void done(ParseException e) {
//
//                if (e == null) {
//
//                    Log.i("Signup", "Success! New user: " + username + " : " + password);
//                    contactList();
//
//                } else {
//
//                    Log.i("Signup", "Error, user not created");
//                    Log.i("Signup", String.valueOf(e));
//
//                }
//
//            }
//        });
//
//    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

ContactsActivity
package com.konggit.apptwit;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;

import com.parse.ParseUser;

public class ContactsList extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_contacts_list);
    }

    private void logout() {

        Log.i("ListLogout", "User : " + ParseUser.getCurrentUser().getUsername());
        ParseUser.logOut();
        mainActivity();

    }

    private void mainActivity() {

        Intent intent = new Intent(getApplicationContext(), MainActivity.class);
        startActivity(intent);

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {

        MenuInflater menuInflater = getMenuInflater();
        menuInflater.inflate(R.menu.contacts_menu, menu);

        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {

        super.onOptionsItemSelected(item);

        switch (item.getItemId()) {

            case R.id.help:
                Log.i("Menu", "Help selected");
                return true;

            case R.id.log_out:
                Log.i("Menu", "Log Out selected");
                logout();

            default:
                return false;
        }

    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////

activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.konggit.apptwit.MainActivity">

    <EditText
        android:id="@+id/editTextLogin"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginLeft="8dp"
        android:layout_marginRight="8dp"
        android:layout_marginTop="108dp"
        android:ems="10"
        android:inputType="textPersonName"
        android:text="Login"
        app:layout_constraintHorizontal_bias="0.111"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>

    <EditText
        android:id="@+id/editTextPassword"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="textPassword"
        android:layout_marginTop="20dp"
        app:layout_constraintTop_toBottomOf="@+id/editTextLogin"
        android:layout_marginLeft="8dp"
        app:layout_constraintLeft_toLeftOf="parent"
        android:layout_marginRight="8dp"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintHorizontal_bias="0.111"/>

    <Button
        android:id="@+id/buttonLogin"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginBottom="8dp"
        android:layout_marginLeft="8dp"
        android:layout_marginRight="8dp"
        android:layout_marginTop="6dp"
        android:text="signup/login"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/editTextPassword"
        app:layout_constraintVertical_bias="0.046"/>

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="157dp"
        android:layout_height="70dp"
        app:srcCompat="@mipmap/ic_launcher"
        app:layout_constraintTop_toTopOf="parent"
        android:layout_marginTop="8dp"
        android:layout_marginBottom="8dp"
        app:layout_constraintBottom_toTopOf="@+id/editTextLogin"
        android:layout_marginRight="8dp"
        app:layout_constraintRight_toRightOf="parent"
        android:layout_marginLeft="8dp"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintHorizontal_bias="0.08"
        app:layout_constraintVertical_bias="0.772"/>
</android.support.constraint.ConstraintLayout>

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

activity_contacts_list.xml

<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.konggit.apptwit.ContactsList">

    <ListView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginBottom="8dp"
        android:layout_marginLeft="8dp"
        android:layout_marginRight="8dp"
        android:layout_marginTop="8dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>
</android.support.constraint.ConstraintLayout>


/////////////////////////////////////////////////////////////////////////////////////////



build.gradle project
// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

///////////////////////////////////////////////////////////////////////////////////////////////

build.gradle module app

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.konggit.apptwit"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.parse.bolts:bolts-tasks:1.4.0'
    compile 'com.parse:parse-android:1.15.7'
    testCompile 'junit:junit:4.12'
}

///////////////////////////////////////////////////////////////////////////////////////////////////////

main_menu.xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">

    <item android:title="@string/help"
          android:id="@+id/help"/>

</menu>

////////////////////////////////////////////////////////////////////////////////////////////////////////

contacts_menu.xml

<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">

    <item android:title="@string/log_out"
          android:id="@+id/log_out"/>

    <item android:title="@string/help"
          android:id="@+id/help"/>

</menu>


